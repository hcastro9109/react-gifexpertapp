{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"mMAKaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAuBA,OAEI,sBAAMC,SAlBU,SAACC,GACjBA,EAAEC,iBAEDJ,EAAWK,OAAOC,OAAO,IAE1BR,GAAe,SAAAS,GAAU,OAAMP,GAAN,mBAAqBO,OAC9CN,EAAc,MAYd,SAEA,uBACGO,KAAK,OACLC,MAAOT,EACPU,SA5BiB,SAACP,GAErBF,EAAcE,EAAEQ,OAAOF,a,+BCXlBG,EAAO,uCAAE,WAAOC,GAAP,uBAAAC,EAAA,6DAGZC,EAHY,iDAGmCC,UAAUH,GAH7C,+DAKAI,MAAMF,GALN,cAKbG,EALa,gBAOEA,EAAKC,OAPP,uBAOZC,EAPY,EAOZA,KAIDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EAE5B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAhBpB,kBAuBZM,GAvBY,4CAAF,sDCEPO,EAAc,SAAC,GAAiB,IAAhBH,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAE/B,OACI,sBAAKc,UAAW,yCAAhB,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,kCAAKA,SCFJO,EAAW,SAAC,GAAiB,IAAfnB,EAAc,EAAdA,SAEvB,ECHuB,SAACA,GAExB,MAA0Bd,mBAAS,CAE/BqB,KAAK,GACLa,SAAU,IAHd,mBAAOC,EAAP,KAAcC,EAAd,KA0BA,OAnBKC,qBAAY,WAETxB,EAAQC,GACPwB,MAAK,SAAAC,GAGEH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAO1B,CAACpB,IAIGqB,EDzBuBK,CAAc1B,GAAhCa,EAAZ,EAAON,KAAaa,EAApB,EAAoBA,QAGpB,OAEI,qCACA,oBAAIJ,UAAU,oCAAd,SAAmDhB,IAElDoB,GAAW,mBAAGJ,UAAU,mCAAb,qBAGX,qBAAKA,UAAU,YAAf,SAOLH,EAAOJ,KAAI,SAAAC,GAAG,OAEV,cAAC,EAAD,eAEIA,GADEA,EAAIC,aEjBLgB,EAAc,WAGnB,MAAoCzC,mBAAS,CAAC,cAA9C,mBAAOQ,EAAP,KAAmBT,EAAnB,KAQJ,OACQ,qCAEA,8CAEE,cAAC,EAAD,CAAaA,cAAeA,IAE9B,uBAGA,6BAEUS,EAAWe,KAAK,SAAAT,GAAQ,OAEtB,cAAC,EAAD,CAECA,SAAWA,GADNA,Y,MChC9B4B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.ab4ccb7a.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\nimport  PropTypes from 'prop-types';\r\n\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n    \r\n    const [inputValue, setinputValue] = useState('');\r\n\r\n    const handleInputChange=(e) => {\r\n\r\n        setinputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit =(e)=>{\r\n        e.preventDefault();\r\n\r\n      if(inputValue.trim().length>2){\r\n\r\n        setCategories( categories => [ inputValue, ...categories]);\r\n        setinputValue('');\r\n\r\n\r\n\r\n      }\r\n\r\n\r\n    }\r\n\r\n\r\n    return (\r\n  \r\n        <form onSubmit={handleSubmit}>\r\n\r\n        <input \r\n           type=\"text\"\r\n           value={inputValue}\r\n           onChange={ handleInputChange  }\r\n           />\r\n\r\n        </form>\r\n         \r\n      \r\n    )\r\n}\r\n\r\n\r\nAddCategory.propTypes ={\r\n\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\n","export const getGifs =async( category ) =>{\r\n\r\n\r\n    const url=`https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=9EPAkHkAU3IXIqoK6VN0GGP6FFUCoFaM`\r\n\r\n   const resp = await fetch(url);\r\n\r\n   const {data} = await resp.json();\r\n\r\n  // console.log(data);\r\n\r\n   const gifs = data.map(img => {\r\n\r\n    return {\r\n        id: img.id,\r\n        title: img.title,\r\n        url: img.images?.downsized_medium.url\r\n    }\r\n\r\n   } )\r\n\r\n//    console.log(gifs);\r\n\r\n   return gifs;\r\n\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({title,url}) => {\r\n\r\n    return (\r\n        <div className =\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title}></img>\r\n            <p> {title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\n\r\nexport const GifGrid =  ( {category}) => {\r\n\r\n    const {data:images, loading} =useFetchGifs( category );\r\n  \r\n\r\n    return (\r\n\r\n        <> \r\n        <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n\r\n        {loading && <p className=\"animate__animated animate__flash\">Loading</p>  }\r\n\r\n      \r\n         <div className=\"card-grid\">\r\n\r\n            \r\n\r\n           \r\n\r\n{\r\n    images.map(img => (\r\n\r\n        <GifGridItem \r\n        key ={img.id}\r\n        {...img } \r\n        />\r\n            ))\r\n}                 \r\n        </div> \r\n\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\n\r\nexport const useFetchGifs =(category)=>{\r\n\r\n    const [state, setstate] = useState({\r\n\r\n        data:[],\r\n        loading : true\r\n\r\n    });\r\n\r\n         useEffect ( () => {\r\n\r\n            getGifs(category)\r\n            .then(imgs => {\r\n             \r\n\r\n                    setstate({\r\n                        data: imgs,\r\n                        loading: false\r\n                    });\r\n               \r\n           \r\n        });\r\n        \r\n\r\n     },[category])\r\n\r\n\r\n\r\n    return state;\r\n\r\n\r\n}","// rafc\r\n\r\nimport React, {useState} from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\n\r\n\r\n//import  PropTypes from 'prop-types';\r\n\r\n\r\nexport const GifExpertApp =( ) => {\r\n\r\n\r\n        const [categories, setCategories] = useState(['One Punch']);\r\n\r\n        // const handleAdd =()=>{\r\n\r\n        //     setCategories([...categories, 'HunterXHunter']);\r\n        // setCategories( cats => [...categories, 'HunterXHunter']);\r\n        // };\r\n\r\n    return (   \r\n            <>\r\n\r\n            <h2>GifExpertApp</h2>   \r\n\r\n              <AddCategory setCategories={setCategories} />\r\n\r\n            <hr/>\r\n\r\n            \r\n            <ol>\r\n                    { \r\n                      categories.map( category =>(\r\n\r\n                        <GifGrid\r\n                         key={category}\r\n                         category ={category} \r\n                         />\r\n                        ))\r\n                    }\r\n                   \r\n            </ol>\r\n          \r\n\r\n         </>\r\n        ) ;\r\n\r\n    \r\n\r\n}\r\n\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {GifExpertApp} from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}